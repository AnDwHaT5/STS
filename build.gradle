buildscript {
    repositories {
        jcenter()
        maven {
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            url = "https://jitpack.io"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id 'java'
    id 'org.spongepowered.plugin' version '0.8.1'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
}

apply plugin: 'net.minecraftforge.gradle.forge'

group 'agp.andwhat5'
version '1.0.0'
ext.spongeversion = '7.1.0-SNAPSHOT'
ext.teslaversion = '1.1.4'
ext.pixelmonversion = '6.3.4'

repositories {
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {
    shadow "org.spongepowered:spongecommon:${spongeversion}:dev"
    implementation "com.github.SimonFlash.TeslaPowered:TeslaLibs:v${teslaversion}"
    shadow fileTree(dir: 'libs-', include: "Pixelmon-1.12.2-${pixelmonversion}-server-deobf.jar")
    compile group: 'com.zaxxer', name: 'HikariCP', version: '2.5.1'
}

jar {
    archiveName = "${project.name}-s${spongeversion[0..2]}-t${teslaversion}-v${version}.jar"
}

shadowJar {
    dependencies {
        include dependency("com.github.SimonFlash.TeslaPowered:TeslaLibs:v${teslaversion}")
    }
    relocate 'com.mcsimonflash.sponge.teslalibs', 'co.carrd.andwhat5.sts.sponge.wondertrade.teslalibs'
    archiveName = "${project.name}-s${spongeversion.substring(0, 3)}-v${version}.jar"
}

reobf {
    shadowJar {
        mappingType = 'SEARGE'
    }
}

task copyJars(type: Copy) {
    from shadowJar into project.file("#releases/${version[0..4]}")
}

build.dependsOn(reobfShadowJar)
build.dependsOn(copyJars)

minecraft {
    version = "1.12.2-14.23.2.2611"
    runDir = "run"
    mappings = "snapshot_20171003"
    useDepAts = true
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}